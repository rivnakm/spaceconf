name: Test Action

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.0
        with:
          versionSpec: "6.x"

      - name: Run GitVersion
        uses: gittools/actions/gitversion/execute@v3.0.0
        id: version
        with:
          configFilePath: "./.github/GitVersion.yml"
          useConfigFile: true

      - name: Set version
        shell: pwsh
        run:
          ((Get-Content -Path "./Cargo.toml" -Raw) -replace "0.0.0", "${{ steps.version.outputs.semVer }}") | Set-Content -Path "./Cargo.toml"

      - name: Cache Rust build
        if: github.event_name == 'pull_request'
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ github.event.number }}_target

      - name: Build Linux x86_64-unknown-linux-gnu
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          tar cvfJ ./spaceconf_${{ github.ref_name }}_linux_amd64.tar.xz ./target/x86_64-unknown-linux-gnu/release/spaceconf

      - name: Tag release
        if: github.event_name == 'push'
        run: |
            git tag v${{ steps.version.outputs.semVer }}
            git push --tags

      - name: Build Changelog
        if: github.event_name == 'push'
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v5
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            configuration: "./.github/changelog.json"

      - name: Create Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v2
        with:
            body: ${{ steps.changelog.outputs.changelog }}
            prerelease: ${{ github.ref_name != 'main' }}
            fail_on_unmatched_files: false
            files: |
                ./spaceconf_*.tar.xz
            name: Release v${{ steps.version.outputs.semVer }}
            token: ${{ secrets.GITHUB_TOKEN }}
            tag_name: v${{ steps.version.outputs.semVer }}
